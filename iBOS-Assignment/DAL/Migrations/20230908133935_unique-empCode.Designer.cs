// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iBOS_Assignment.DAL;

namespace iBOS_Assignment.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230908133935_unique-empCode")]
    partial class uniqueempCode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("iBOS_Assignment.DAL.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EmployeeSalary")
                        .HasColumnType("int");

                    b.Property<long?>("SupervisorId")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 502030L,
                            EmployeeCode = "EMP320",
                            EmployeeName = "Mehedi Hasan",
                            EmployeeSalary = 50000,
                            SupervisorId = 502036L
                        },
                        new
                        {
                            EmployeeId = 502031L,
                            EmployeeCode = "EMP321",
                            EmployeeName = "Ashikur Rahman",
                            EmployeeSalary = 45000,
                            SupervisorId = 502036L
                        },
                        new
                        {
                            EmployeeId = 502032L,
                            EmployeeCode = "EMP322",
                            EmployeeName = "Rakibul Islam",
                            EmployeeSalary = 52000,
                            SupervisorId = 502030L
                        },
                        new
                        {
                            EmployeeId = 502033L,
                            EmployeeCode = "EMP323",
                            EmployeeName = "Hasan Abdullah",
                            EmployeeSalary = 46000,
                            SupervisorId = 502031L
                        },
                        new
                        {
                            EmployeeId = 502034L,
                            EmployeeCode = "EMP324",
                            EmployeeName = "Akib Khan",
                            EmployeeSalary = 66000,
                            SupervisorId = 502032L
                        },
                        new
                        {
                            EmployeeId = 502035L,
                            EmployeeCode = "EMP325",
                            EmployeeName = "Rasel Shikder",
                            EmployeeSalary = 53500,
                            SupervisorId = 502033L
                        },
                        new
                        {
                            EmployeeId = 502036L,
                            EmployeeCode = "EMP326",
                            EmployeeName = "Selim Reja",
                            EmployeeSalary = 59000,
                            SupervisorId = 502035L
                        });
                });

            modelBuilder.Entity("iBOS_Assignment.DAL.Models.EmployeeAttendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAbsent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAttendances");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AttendanceDate = new DateTime(2023, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502030L,
                            IsAbsent = false,
                            IsOffDay = false,
                            IsPresent = true
                        },
                        new
                        {
                            Id = 2L,
                            AttendanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502030L,
                            IsAbsent = true,
                            IsOffDay = false,
                            IsPresent = false
                        },
                        new
                        {
                            Id = 3L,
                            AttendanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502031L,
                            IsAbsent = false,
                            IsOffDay = false,
                            IsPresent = true
                        });
                });

            modelBuilder.Entity("iBOS_Assignment.DAL.Models.EmployeeAttendance", b =>
                {
                    b.HasOne("iBOS_Assignment.DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
